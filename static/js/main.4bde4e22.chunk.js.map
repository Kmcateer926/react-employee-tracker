{"version":3,"sources":["components/EmployeeResults/EmployeeResults.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["EmployeeResults","state","employees","filteredEmployees","search","getEmployees","axios","get","then","response","setState","data","results","catch","err","handleInputChange","event","target","name","value","filter","employee","location","city","includes","handleButtonClick","sortedBy","sort","a","b","first","this","onChange","type","placeholder","className","onClick","map","scope","src","picture","thumbnail","alt","login","uuid","last","href","phone","dob","age","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAqHeA,G,kNAhHbC,MAAQ,CACNC,UAAW,GACXC,kBAAmB,GACnBC,OAAQ,I,EAMVC,aAAe,WACbC,IACGC,IAAI,yCACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZR,UAAWO,EAASE,KAAKC,QACzBT,kBAAmBM,EAASE,KAAKC,aAGpCC,OAAM,SAACC,GACN,GAAIA,EAAK,MAAMA,M,EAIrBC,kBAAoB,SAACC,GAAW,IAAD,IACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACRhB,EAAoB,EAAKF,MAAMC,UAAUkB,QAAO,SAACC,GACrD,OAAOA,EAASC,SAASC,KAAKC,SAASL,MAIzC,EAAKT,UAAL,mBACGQ,EAAOC,GADV,kCAEqBhB,GAFrB,K,EAMFsB,kBAAoB,WAClB,IAAMC,EAAW,EAAKzB,MAAME,kBAAkBwB,MAAK,SAACC,EAAGC,GACrD,OAAOD,EAAEV,KAAKY,MAAQD,EAAEX,KAAKY,OAAS,EAAI,KAE5C,EAAKpB,SAAS,CACZR,UAAWwB,K,kEAnCbK,KAAK1B,iB,+BAwCL,OACE,gCACE,uBACEc,MAAOY,KAAK9B,MAAMG,OAClBc,KAAK,SACLc,SAAUD,KAAKhB,kBACfkB,KAAK,OACLC,YAAY,mBAEd,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,cAAf,SACE,uBAAOA,UAAU,QAAjB,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,uCACA,4CAAc,wBAAQC,QAASL,KAAKN,kBAAtB,SACZ,mBAAGU,UAAU,2BACA,IAEf,sCACA,wCACA,qCACA,2CAGJ,gCACGJ,KAAK9B,MAAME,kBAAkBkC,KAAI,SAACzB,GACjC,OACE,+BACE,oBAAI0B,MAAM,MAAV,SACE,qBACEC,IAAK3B,EAAQ4B,QAAQC,UACrBN,UAAU,YACVO,IAAI,gBAGR,6BACG9B,EAAQM,KAAKY,OADPlB,EAAQ+B,MAAMC,MAGvB,6BAAKhC,EAAQM,KAAK2B,OAClB,6BACE,mBAAGC,KAAK,+BAAR,SACGlC,EAAQmC,UAGb,6BAAKnC,EAAQoC,IAAIC,MAEjB,6BAAKrC,EAAQU,SAASC,mC,GAjGpB2B,c,MCQfC,MAVf,WACE,OACE,sBAAKhB,UAAU,SAAf,UACE,oDACA,oGCSSiB,MAXf,WACE,OACE,qCAEE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4bde4e22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./EmployeeResults.css\";\r\n\r\nclass EmployeeResults extends Component {\r\n  state = {\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    search: \"\",\r\n  };\r\n  componentDidMount() {\r\n    this.getEmployees();\r\n  }\r\n\r\n  getEmployees = () => {\r\n    axios\r\n      .get(\"https://randomuser.me/api/?results=30\")\r\n      .then((response) => {\r\n        this.setState({\r\n          employees: response.data.results,\r\n          filteredEmployees: response.data.results,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err) throw err;\r\n      });\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const filteredEmployees = this.state.employees.filter((employee) => {\r\n      return employee.location.city.includes(value);\r\n      // return employee.email.includes(value);\r\n    });\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      filteredEmployees: filteredEmployees,\r\n    });\r\n  };\r\n\r\n  handleButtonClick = () => {\r\n    const sortedBy = this.state.filteredEmployees.sort((a, b) => {\r\n      return a.name.first < b.name.first ? -1 : 1;\r\n    });\r\n    this.setState({\r\n      employees: sortedBy,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          value={this.state.search}\r\n          name=\"search\"\r\n          onChange={this.handleInputChange}\r\n          type=\"text\"\r\n          placeholder=\"search by city\"\r\n        />\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"text-center\">\r\n                <table className=\"table\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Photo</th>\r\n                        <th>Name:First<button onClick={this.handleButtonClick}>\r\n                          <i className=\"fas fa-caret-down\"></i>\r\n                        </button></th>{\" \"}\r\n                        \r\n                        <th>Last</th>\r\n                        <th>Phone#</th>\r\n                        <th>Age</th>\r\n                        <th>City</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.filteredEmployees.map((results) => {\r\n                        return (\r\n                          <tr>\r\n                            <th scope=\"row\">\r\n                              <img\r\n                                src={results.picture.thumbnail}\r\n                                className=\"img-fluid\"\r\n                                alt=\"thumbnail\"\r\n                              />\r\n                            </th>\r\n                            <td key={results.login.uuid}>\r\n                              {results.name.first}\r\n                            </td>\r\n                            <td>{results.name.last}</td>\r\n                            <td>\r\n                              <a href=\"mailto::{results.name.phone}\">\r\n                                {results.phone}\r\n                              </a>\r\n                            </td>\r\n                            <td>{results.dob.age}</td>\r\n                            {/* <td>{results.city}</td> */}\r\n                            <td>{results.location.city}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeResults;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Employee Directory</h1>\r\n      <p>\r\n        Click on the button to sort names by alphabet or search by city\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\nimport EmployeeResults from \"./components/EmployeeResults/EmployeeResults\";\nimport Header from \"./components/Header/Header\"\n// import SearchResults from \"./components/SearchResults/SearchResults\";\nfunction App() {\n  return (\n    <>\n      {/* <SearchResults /> */}\n      <Header/>\n      <EmployeeResults />\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}