{"version":3,"sources":["componenets/Table.jsx","componenets/EmployeeResults.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","picture","first","last","phone","email","dob","fullName","alt","src","moment","format","EmployeeResults","state","employees","get","searchEmployees","query","axios","then","response","employeeArr","data","results","console","log","gender","name","title","location","country","login","username","password","large","setState","bioPic","catch","err","this","className","scope","map","item","firstName","lastName","city","key","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAmBeA,EAhBD,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7CC,EAAQ,UAAML,EAAN,YAAeC,GACvBK,EAAG,UAAMD,EAAN,YACT,OACE,+BACE,6BACE,qBAAKE,IAAKR,EAASO,IAAKA,MAE1B,6BAAKD,IACL,6BAAKH,IACL,6BAAKC,IACL,6BAAKK,IAAOJ,GAAKK,OAAO,oBCmFfC,E,4MA3FbC,MAAQ,CACNC,UAAW,GACXC,IAAK,I,EAKPC,gBAAkB,SAACC,GACjBC,IACGH,IAAI,8BACJI,MAAK,SAACC,GACL,IAAMC,EAAcD,EAASE,KAAKC,QAElCC,QAAQC,IAAIJ,EAAY,GAAGK,QAC3BF,QAAQC,IAAIJ,EAAY,GAAGM,KAAKC,OAChCJ,QAAQC,IAAIJ,EAAY,GAAGM,KAAKzB,OAChCsB,QAAQC,IAAIJ,EAAY,GAAGM,KAAKxB,MAChCqB,QAAQC,IAAIJ,EAAY,GAAGQ,SAASC,SACpCN,QAAQC,IAAIJ,EAAY,GAAGhB,OAC3BmB,QAAQC,IAAIJ,EAAY,GAAGU,MAAMC,UACjCR,QAAQC,IAAIJ,EAAY,GAAGU,MAAME,UACjCT,QAAQC,IAAIJ,EAAY,GAAGpB,QAAQiC,OACnC,EAAKC,SAAS,CACZC,OAAQf,EAAY,GAAGpB,QAAQiC,MAC/BP,KACE,IACAN,EAAY,GAAGM,KAAKC,MACpB,IACAP,EAAY,GAAGM,KAAKzB,MACpB,IACAmB,EAAY,GAAGM,KAAKxB,KACtB0B,SAAUR,EAAY,GAAGQ,SAASC,QAClCzB,MAAOgB,EAAY,GAAGhB,MACtB2B,SAAUX,EAAY,GAAGU,MAAMC,cAGlCK,OAAM,SAACC,GACNd,QAAQC,IAAIa,O,kEAhChBC,KAAKvB,gBAAgB,M,+BAqCrB,OACI,8BACE,qBAAKwB,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,cAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,8BAIA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,gCAGJ,wBAAOD,UAAU,QAAjB,UACF,gCACE,+BACE,uCACA,4CACA,2CACA,uCACA,uCACA,2CAGH,YAAID,KAAK1B,MAAMC,WAAW4B,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,CACE1C,QAAS0C,EAAK1C,QACd2C,UAAWD,EAAKC,UAChBC,SAAUF,EAAKE,SACfxC,MAAOsC,EAAKtC,MACZD,MAAOuC,EAAKvC,MACZ0C,KAAMH,EAAKG,MACNH,EAAKI,0B,GA/EAC,aCEfC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e56c6f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Table = ({ picture, first, last, phone, email, dob }) => {\r\n  const fullName = `${first} ${last}`;\r\n  const alt = `${fullName}'s Image`;\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={picture} alt={alt} />\r\n      </td>\r\n      <td>{fullName}</td>\r\n      <td>{phone}</td>\r\n      <td>{email}</td>\r\n      <td>{moment(dob).format(\"MM-DD-YYYY\")}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Table;","import React, { Component } from \"react\";\r\n// import API from './utils/API';\r\nimport axios from \"axios\";\r\nimport Table from \"./Table\";\r\n\r\nclass EmployeeResults extends Component {\r\n  state = {\r\n    employees: [],\r\n    get: \"\",\r\n  };\r\n  componentDidMount() {\r\n    this.searchEmployees(\"\");\r\n  }\r\n  searchEmployees = (query) => {\r\n    axios\r\n      .get(\"https://randomuser.me/api/\")\r\n      .then((response) => {\r\n        const employeeArr = response.data.results;\r\n\r\n        console.log(employeeArr[0].gender);\r\n        console.log(employeeArr[0].name.title);\r\n        console.log(employeeArr[0].name.first);\r\n        console.log(employeeArr[0].name.last);\r\n        console.log(employeeArr[0].location.country);\r\n        console.log(employeeArr[0].email);\r\n        console.log(employeeArr[0].login.username);\r\n        console.log(employeeArr[0].login.password);\r\n        console.log(employeeArr[0].picture.large);\r\n        this.setState({\r\n          bioPic: employeeArr[0].picture.large,\r\n          name:\r\n            \" \" +\r\n            employeeArr[0].name.title +\r\n            \" \" +\r\n            employeeArr[0].name.first +\r\n            \" \" +\r\n            employeeArr[0].name.last,\r\n          location: employeeArr[0].location.country,\r\n          email: employeeArr[0].email,\r\n          username: employeeArr[0].login.username,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"text-center\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Employee Picture</th>\r\n                      {/* <th scope=\"col\" onClick={sortBy}>\r\n                        Name\r\n                      </th> */}\r\n                      <th scope=\"col\">CellPhone</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Date of Birth</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Photo</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>City</th>\r\n                  </tr>\r\n                </thead>\r\n                {[...this.state.employees].map((item) => (\r\n                  <Table\r\n                    picture={item.picture}\r\n                    firstName={item.firstName}\r\n                    lastName={item.lastName}\r\n                    email={item.email}\r\n                    phone={item.phone}\r\n                    city={item.city}\r\n                    key={item.key}\r\n                  />\r\n                ))}\r\n              </table>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EmployeeResults;\r\n","import React from 'react';\nimport EmployeeResults from \"./componenets/EmployeeResults\"\n\nfunction App() {\n  return <EmployeeResults/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}